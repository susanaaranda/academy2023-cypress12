const { defineConfig } = require('cypress')

module.exports = defineConfig({
  e2e: {
    experimentalStudio: false,
    setupNodeEvents(on, config) {
      // implement node event listeners here
    },
    baseUrl: 'https://practice.automationtesting.in/',
    chromeWebSecurity: false,
    reporter: 'mochawesome',
    reporterOptions: {
      reportdir: 'cypress/report/mochawesome-report',
      overwrite: false,
      html: true,
      json: false,
      timestamp: 'mmddyyyy_HHMMss'
    },
    clientCertificates: [],
    defaultCommandTimeout: 4000,
    downloadsFolder: 'cypress/downloads',
    env: {
    },
    excludeSpecPattern: '*.hot-update.js',
    execTimeout: 60000,
    experimentalFetchPolyfill: false,
    experimentalInteractiveRunEvents: false,
    experimentalSessionAndOrigin: false,
    experimentalSourceRewriting: false,
    fileServerFolder: '',
    fixturesFolder: 'cypress/fixtures',
    hosts: null,
    includeShadowDom: false,
    isInteractive: true,
    keystrokeDelay: 0,
    modifyObstructiveCode: true,
    numTestsKeptInMemory: 50,
    pageLoadTimeout: 60000,
    platform: 'win32',
    port: null,
    projectId: 'pjumnt',
    redirectionLimit: 20,
    reporter: 'spec',
    reporterOptions: null,
    requestTimeout: 5000,
    resolvedNodePath: null,
    resolvedNodeVersion: null,
    responseTimeout: 30000,
    retries: {
        runMode: 0,
        openMode: 0,
    },
    screenshotOnRunFailure: true,
    screenshotsFolder: 'cypress/screenshots',
    scrollBehavior: 'top',
    slowTestThreshold: 10000,
    specPattern: 'cypress/integration/**/*.{js,jsx,ts,tsx}',
    supportFile: 'cypress/support/e2e.{js,jsx,ts,tsx}',
    supportFolder: false,
    taskTimeout: 60000,
    trashAssetsBeforeRuns: true,
    userAgent: null,
    video: true,
    videoCompression: 32,
    videosFolder: 'cypress/videos',
    videoUploadOnPasses: true,
    viewportHeight: 1080,
    viewportWidth: 1920,
    waitForAnimations: true,
    watchForFileChanges: true,
  },
})